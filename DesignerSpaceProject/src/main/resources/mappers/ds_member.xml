<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
 "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
<mapper namespace="com.project.member">

	<sql id="search">
		<choose>
        	<!-- 검색옵션이 전체 검색일 경우  -->
        	<when test="searchOption == 'all'">
        		WHERE (MEMBER_NICK LIKE '%' || #{keyword} || '%'
        		OR    MEMBER_EMAIL LIKE '%' || #{keyword} || '%')
        	</when>
        	
        	<!-- 전체 검색이 아닐 경우 -->
        	<otherwise>
        		WHERE ${searchOption} LIKE '%' || #{keyword} || '%'
        	</otherwise>
        </choose>
	</sql>
	
	<resultMap type="com.project.member.model.MemberDto" 
		id="memberResultMap">
		<id column="MEMBER_NO" property="member_no"/>
		<result column="MEMBER_NICK" property="member_nick"/>
		<result column="MEMBER_NAME" property="member_name"/>
		<result column="MEMBER_EMAIL" property="member_email"/>
		<result column="MEMBER_PWD" property="member_pwd"/>
		<result column="MEMBER_PHONE" property="member_phone"/>
		<result column="MEMBER_CHECK_QUESTION" property="member_check_question"/>
		<result column="MEMBER_CHECK_ANSWER" property="member_check_answer"/>
		<result column="MEMBER_COMMENTS" property="member_comments"/>
		<result column="MEMBER_CRE_DATE" property="member_cre_date"
			javaType="java.util.Date"/>
		<result column="MEMBER_MOD_DATE" property="member_mod_date"
			javaType="java.util.Date"/>
		<result column="MEMBER_SIGN_CHECK" property="member_sign_check"/>
		<result column="MEMBER_GRADE" property="member_grade"/>
		<result column="MEMBER_DEL_FLAG" property="member_del_flag"/>
		
		<result column="profile_table_no" property="profile_table_no"/>
		<result column="profile_table_mno" property="profile_table_mno"/>
		<result column="profile_table_original_name" property="profile_table_original_name"/>
		<result column="profile_table_stored_name" property="profile_table_stored_name"/>
		
	</resultMap>
	
	<resultMap type="com.project.member.model.MemberBoardDto" 
		id="memberListResultMap">
		<id column="MEMBER_NO" property="member_no"/>
		<result column="MEMBER_NICK" property="member_nick"/>
		<result column="MEMBER_EMAIL" property="member_email"/>
		<result column="MEMBER_CRE_DATE" property="member_cre_date"
			javaType="java.util.Date"/>
		<result column="MEMBER_GRADE" property="member_grade"/>
				
		<result column="BOARD_CNT" property="board_cnt"/>
		<result column="LIKE_CNT" property="like_cnt"/>
	</resultMap>
	
	
	<select id="memberExist" parameterType="map" 
		resultMap="memberResultMap">
		
		SELECT M.MEMBER_NO, M.MEMBER_NICK, M.MEMBER_NAME, PT.PROFILE_TABLE_STORED_NAME, M.MEMBER_GRADE
		FROM MEMBER M LEFT JOIN PROFILE_TABLE PT
        ON MEMBER_NO = PROFILE_TABLE_MNO
		WHERE M.MEMBER_EMAIL = #{member_email}
		AND M.MEMBER_PWD = #{member_pwd}
		AND M.MEMBER_DEL_FLAG ='N'
	</select>
	
	<select id="memberIdFind" parameterType="map" 
		resultMap="memberResultMap">
		SELECT MEMBER_EMAIL
		FROM MEMBER
		WHERE MEMBER_NAME = #{member_name}
		AND MEMBER_PHONE = #{member_phone}
	</select>
	
	<select id="memberPwdFind" parameterType="map" 
		resultMap="memberResultMap">
		SELECT MEMBER_Pwd
		FROM MEMBER
		WHERE MEMBER_EMAIL = #{member_email}
		AND MEMBER_CHECK_QUESTION = #{member_check_question}
		AND MEMBER_CHECK_ANSWER = #{member_check_answer}
	</select>
	
	<insert id="memberAdd" parameterType="com.project.member.model.MemberDto"
		useGeneratedKeys="true" keyProperty="member_no">
		<selectKey keyProperty="member_no" resultType="int" order="BEFORE">
			SELECT MEMBER_MNO_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO MEMBER
		VALUE(MEMBER_NO,MEMBER_NAME,MEMBER_NICK,MEMBER_EMAIL,MEMBER_PWD,MEMBER_PHONE,MEMBER_CHECK_QUESTION,
			MEMBER_CHECK_ANSWER,MEMBER_COMMENTS, MEMBER_CRE_DATE, MEMBER_SIGN_CHECK)
		VALUES(#{member_no}, #{member_name}, #{member_nick}, #{member_email}, #{member_pwd}, #{member_phone}, 
			#{member_check_question}, #{member_check_answer}, #{member_comments}, SYSDATE, #{member_sign_check})
		
	</insert>
	
	<select id="memberSelectList" parameterType="map" resultMap="memberListResultMap">
		SELECT RNUM, MEMBER_NO, MEMBER_NICK, MEMBER_EMAIL, BOARD_CNT, 
			LIKE_CNT, MEMBER_CRE_DATE, MEMBER_GRADE
		FROM 
		    (SELECT ROWNUM RNUM, MEMBER_NO, MEMBER_NICK, MEMBER_EMAIL, MEMBER_DEL_FLAG,
		    	MEMBER_CRE_DATE, MEMBER_GRADE
		    FROM MEMBER
		    
		    <include refid="search"></include>
		    
		    AND MEMBER_DEL_FLAG = 'N'
		    ORDER BY MEMBER_NO DESC)
		LEFT JOIN 
		    (SELECT PROJECT_BOARD_MNO, BOARD_CNT, VIEW_CNT, LIKE_CNT
		        FROM 
		            (SELECT PROJECT_BOARD_MNO, COUNT(PROJECT_BOARD_TITLE) BOARD_CNT, 
		            	SUM(PROJECT_BOARD_VIEWS) VIEW_CNT
		            FROM PROJECT_BOARD
		            GROUP BY PROJECT_BOARD_MNO)
		        LEFT JOIN 
		            (SELECT PROJECT_LIKE_MNO, COUNT(PROJECT_LIKE_MNO) LIKE_CNT
		            FROM PROJECT_LIKE
		            WHERE PROJECT_LIKE_FLAG = 'Y'
		            GROUP BY PROJECT_LIKE_MNO)
		    ON PROJECT_BOARD_MNO = PROJECT_LIKE_MNO)
		ON MEMBER_NO = PROJECT_BOARD_MNO
		WHERE RNUM BETWEEN #{start} AND #{end}
		ORDER BY RNUM ASC
		
	</select>
	
	<insert id="profileAdd" parameterType="map">
		INSERT INTO PROFILE_TABLE
			(PROFILE_TABLE_NO, PROFILE_TABLE_MNO, PROFILE_TABLE_ORIGINAL_NAME, PROFILE_TABLE_STORED_NAME)
		VALUES(
			profile_table_ptno_SEQ.nextval, #{profile_table_mno}, #{profile_table_original_name},
			#{profile_table_stored_name}
		)
	</insert>
	
	<select id="memberInfo" parameterType="int" 
		resultMap="memberResultMap">
		SELECT MEMBER_NO, MEMBER_NICK, MEMBER_EMAIL, MEMBER_NAME, MEMBER_PHONE,
			PROFILE_TABLE_ORIGINAL_NAME, PROFILE_TABLE_STORED_NAME, MEMBER_COMMENTS
		FROM MEMBER LEFT JOIN PROFILE_TABLE 
        ON MEMBER_NO = PROFILE_TABLE_MNO
		WHERE MEMBER_NO =#{member_no}
	</select>
	
	<select id="memberMod" parameterType="int" 
		resultMap="memberResultMap">
		SELECT MEMBER_PWD
		FROM MEMBER
		WHERE MEMBER_NO =#{member_no}
	</select>
	
	<select id="memberModDetail" parameterType="int" 
		resultMap="memberResultMap">
		SELECT MEMBER_NO, MEMBER_NAME,Member_Nick, Member_Email, MEMBER_PWD, MEMBER_PHONE,
    		MEMBER_Check_Question, MEMBER_Check_Answer, PROFILE_TABLE_ORIGINAL_NAME, 
    		PROFILE_TABLE_STORED_NAME, MEMBER_COMMENTS, MEMBER_GRADE
		FROM MEMBER LEFT JOIN PROFILE_TABLE
		ON MEMBER_NO = PROFILE_TABLE.PROFILE_TABLE_MNO
		WHERE MEMBER_No = #{member_no}
	</select>
	
	<update id="memberUpdate" parameterType="com.project.member.model.MemberDto">
		UPDATE MEMBER
		<set>
			 MEMBER_NAME =#{member_name} , MEMBER_NICK= #{member_nick}, MEMBER_EMAIL=#{member_email}, 
			 MEMBER_PWD=#{member_pwd}, MEMBER_PHONE=#{member_phone},MEMBER_CHECK_QUESTION=#{member_check_question},
			 MEMBER_CHECK_ANSWER=#{member_check_answer}, MEMBER_COMMENTS=#{member_comments}, MEMBER_MOD_DATE = SYSDATE
		</set>
		WHERE MEMBER_NO =#{member_no}
	</update>
	
	<delete id="profileDelete" parameterType="int">
			DELETE FROM PROFILE_TABLE
			WHERE PROFILE_TABLE_MNO = #{profile_table_mno}
	</delete>
	
	<select id="profileSelectStoredFileName" parameterType="int"
		resultType="map">
		SELECT profile_table_no, profile_table_stored_name
		FROM PROFILE_TABLE
		WHERE profile_table_mno = #{profile_table_mno}
	</select>
	
	
	<select id="memberSelectTotalCount" resultType="int" 
		parameterType="map">
		SELECT COUNT(*)
		FROM MEMBER
		
		<include refid="search"></include>
		AND MEMBER_DEL_FLAG = 'N'
		
	</select>
	
	<select id="memberSelectCurPage" parameterType="map"
		resultType="int">	
		SELECT floor((RNUM-1) / 10)+1 no
		FROM
			(SELECT RNUM, MEMBER_NO, MEMBER_NICK, MEMBER_EMAIL, BOARD_CNT, 
				LIKE_CNT, MEMBER_CRE_DATE, MEMBER_GRADE
			FROM 
			    (SELECT ROWNUM RNUM, MEMBER_NO, MEMBER_NICK, MEMBER_EMAIL, MEMBER_DEL_FLAG,
			    	MEMBER_CRE_DATE, MEMBER_GRADE
			    FROM MEMBER
			    
			    <include refid="search"></include>
			   
			    AND MEMBER_DEL_FLAG = 'N'
			    
			    ORDER BY MEMBER_NO DESC)
			LEFT JOIN 
			    (SELECT PROJECT_BOARD_MNO, BOARD_CNT, VIEW_CNT, LIKE_CNT
			        FROM 
			            (SELECT PROJECT_BOARD_MNO, COUNT(PROJECT_BOARD_TITLE) BOARD_CNT, 
			            	SUM(PROJECT_BOARD_VIEWS) VIEW_CNT
			            FROM PROJECT_BOARD
			            GROUP BY PROJECT_BOARD_MNO)
			        LEFT JOIN 
			            (SELECT PROJECT_LIKE_MNO, COUNT(PROJECT_LIKE_MNO) LIKE_CNT
			            FROM PROJECT_LIKE
			            WHERE PROJECT_LIKE_FLAG = 'Y'
			            GROUP BY PROJECT_LIKE_MNO)
			    ON PROJECT_BOARD_MNO = PROJECT_LIKE_MNO)
			ON MEMBER_NO = PROJECT_BOARD_MNO
			WHERE RNUM BETWEEN #{start} AND #{end}
			ORDER BY RNUM ASC)
		WHERE MEMBER_NO = #{no}
	</select>
	
	<update id="memberRemove" parameterType="int">
		UPDATE MEMBER
		<set>
			 MEMBER_DEL_FLAG = 'Y'
		</set>
		WHERE MEMBER_NO =#{member_no}
	</update>
	
	<update id="projectRemove" parameterType="int">
		UPDATE PROJECT_BOARD
		<set>
			 PROJECT_BOARD_DEL_FLAG = 'Y'
		</set>
		WHERE PROJECT_BOARD_MNO =#{member_no}
	</update>
	

	<delete id="freeLikeDelete" parameterType="int">
			DELETE FROM FREE_LIKE
			WHERE FREE_LIKE_MNO = #{member_no}
	</delete>
	
	<delete id="freeCommentDelete" parameterType="int">
			DELETE FROM FREE_COMMENT
			WHERE FREE_COMMENT_MNO = #{member_no}
	</delete>
	
	<delete id="freeBoardDelete" parameterType="int">
			DELETE FROM FREE_BOARD
			WHERE FREE_BOARD_MNO = #{member_no}
	</delete>
	
	
	<delete id="QnaCommentDelete" parameterType="int">
			DELETE FROM QNA_COMMENT
			WHERE QNA_COMMENT_MNO = #{member_no}
	</delete>
	
	<delete id="QnaBoardDelete" parameterType="int">
			DELETE FROM QNA_BOARD 
			WHERE QNA_BOARD_MNO = #{member_no}
	</delete>
	
	<delete id="reportDelete" parameterType="int">
			DELETE FROM REPORT_BOARD
			WHERE REPORT_BOARD_MNO = #{member_no}
	</delete>
	
	
	

<!-- 	중복체크   -->
	<select id="checkNick" parameterType="String" 
		resultType="int">
		
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_NICK = #{nick}
	</select>
	
	<select id="checkEmail" parameterType="String" 
		resultType="int">
		
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_EMAIL = #{email}
	</select>
	
	<select id="checkPhone" parameterType="String" 
		resultType="int">
		
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_PHONE = #{phone}
	</select>
	
</mapper>